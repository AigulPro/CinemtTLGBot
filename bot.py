import time
import logging
from dataclasses import dataclass

from aiogram.dispatcher.filters import Text

import config
import requests
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from apiParser import get_weather

COORDINATES = {
    'lon': 0,
    'lat': 0,
}

bot = Bot(token=config.TOKEN_API_TELEGRAM)
dp = Dispatcher(bot=bot)

kb = ReplyKeyboardMarkup(resize_keyboard=True)
kb.add(KeyboardButton('üïπ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –ì–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π', request_location=True))

kb_menu = ReplyKeyboardMarkup(resize_keyboard=True)
kb_menu.add(KeyboardButton('üåû –°–µ–≥–æ–¥–Ω—è'))


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É start
@dp.message_handler(commands=['start'])
async def start_bot(message: types.Message):
    print('I say hello!')
    await message.answer("  –ü—Ä–∏–≤–µ—Ç!\n –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–µ–ª–∏—Å—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π!üïπ\n –ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞! üåÜ",
                         reply_markup=kb)


# –ü–æ–ª—É—á–∞–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –∏ –≤—ã–≤–æ–¥–∏–º –µ–µ
@dp.message_handler(content_types=['location'])
async def handle_location(message: types.Message):
    COORDINATES['lat'] = message.location.latitude
    COORDINATES['lon'] = message.location.longitude
    await message.answer('–û—Ç–ª–∏—á–Ω–æ!', reply_markup=kb_menu)


@dp.message_handler(Text(equals="üåû –°–µ–≥–æ–¥–Ω—è"))
async def get_today_weather(message: types.Message):
    wthr = get_weather(COORDINATES)
    await message.reply(f'{wthr.location}, {wthr.description}\n' \
                        f'Temperature is {wthr.temperature}¬∞C, feels like {wthr.temperature_feeling}¬∞C')
